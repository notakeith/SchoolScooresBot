from aiogram import types

from utils.userstates import UserState

from utils.db_apis.subscriptions import get_subscription_info

from loader import dp

from data.config import HOST,PORT,DB_NAME,DB_DATA, END_OF_THE_YEAR
from pymongo import MongoClient
from utils.message_queue import MessageQueue
message_queue = MessageQueue()

client = MongoClient(HOST, PORT)
db = client[DB_NAME]
data_collection = db[DB_DATA]

@dp.message_handler(commands=['profile'], state=UserState.AUTH)
@dp.message_handler(text=['üßë‚Äçüéì –ü—Ä–æ—Ñ–∏–ª—å'], state=UserState.AUTH)
async def command_profile(message: types.Message):
    sub_info = await get_subscription_info(message.from_user.id)
    name = data_collection.find_one({"chat": message.from_user.id})["name"]
    if sub_info is not None:
        if sub_info["DAYS_TO_EXP_INT"] > 0:
            text = f"""\n\nü§© –ü–æ–¥–ø–∏—Å–∫–∞: –ê–∫—Ç–∏–≤–Ω–∞
       –î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: {sub_info["DATE_TO_EXP"]}
       –î–Ω–µ–π –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: {sub_info["DAYS_TO_EXP_INT"]}"""
        else:
            text = f"\n\nüòì –ü–æ–¥–ø–∏—Å–∫–∞: –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
    else:
        text = f"\n\nüòì –ü–æ–¥–ø–∏—Å–∫–∞: –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
    if sub_info["DATE_TO_EXP"] == END_OF_THE_YEAR:
        await message_queue.add_message(0, chat_id=message.from_user.id, text=f"üßë‚Äçüéì {name} {text}")
    else:
        await message_queue.add_message(0, chat_id=message.from_user.id, text=f"üßë‚Äçüéì {name} {text} \n\n–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å —Å–≤–æ—é –ø–æ–¥–ø–∏—Å–∫—É. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /pay")
