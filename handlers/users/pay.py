from aiogram import types

from loader import dp
from utils.userstates import UserState
from utils.message_queue import MessageQueue
from utils.db_apis.settings import checkIfEmail

message_queue = MessageQueue()


@dp.message_handler(commands=['pay'], state=UserState.AUTH)
async def command_pay(message: types.Message):
    if await checkIfEmail(message.from_user.id):
        #(–Ω–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ 70% –±–æ—Ç–æ–≤ —Å–¥–µ–ª–∞–Ω—ã –Ω–∞ –Ω–µ–º–∏–ª–∏–Ω–≥–µ –∏–ª–∏ –ø–æ–¥–æ–±–Ω–æ–º, –≥–¥–µ –¥–µ–Ω—å–≥–∏ –ø–æ—Å—Ç—É–ø–∞—é—Ç –Ω–∞ –∫–∏–≤–∏, –∫–æ—Ç–æ—Ä—ã–π —Å–µ–π—á–∞—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –¥–∞-–¥–∞..) –∏
        text = """–í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏:\n"""
        await message_queue.add_message(0, chat_id=message.chat.id, text=text, parse_mode="MarkdownV2",
                                        reply_markup="inline_kb_payment", photo_url="https://i.ibb.co/8DqFRq8/image.jpg")
    else:
        text = """üìß –ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –∫—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É, –≤–∞–º –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã. –≠—Ç–æ –æ–±—ã—á–Ω–æ–µ –¥–µ–ª–æ, –æ–Ω –Ω–∞–º –Ω—É–∂–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫–æ–≤. –ß—Ç–æ–±—ã –ø—Ä–∏–≤—è–∑–∞—Ç—å –ø–æ—á—Ç—É –Ω–∞–ø–∏—à–∏—Ç–µ /email.\n
–ü—Ä–∏–º–µ—Ä: /email example123@yandex.ru"""
        await message_queue.add_message(0, chat_id=message.chat.id, text=text)

@dp.callback_query_handler(text=['sub1month'], state=UserState.AUTH)
async def got_sub1month(call: types.CallbackQuery):
    await message_queue.add_message(3, chat_id=call.from_user.id,
                                    text="–ü—Ä–∏–æ–±—Ä–∏—Ç–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞ \"–û—Ü–µ–Ω–∫–∏ –Ω–∞ –ª–∞–¥–æ–Ω–∏\" –Ω–∞ 1 –º–µ—Å—è—Ü", reply_markup="inline_kb_sub1month")
    await message_queue.add_message(0, chat_id=call.from_user.id, message_id=call.message.message_id,
                                    delete_reply_markup=True)


@dp.callback_query_handler(text=['sub3month'], state=UserState.AUTH)
async def got_sub3month(call: types.CallbackQuery):
    await message_queue.add_message(3, chat_id=call.from_user.id, invoceOrder="sub3month")
    await message_queue.add_message(0, chat_id=call.from_user.id, message_id=call.message.message_id,
                                    delete_reply_markup=True)


@dp.callback_query_handler(text=['sub1year'], state=UserState.AUTH)
async def got_sub1year(call: types.CallbackQuery):
    await message_queue.add_message(3, chat_id=call.from_user.id, invoceOrder="sub1year")
    await message_queue.add_message(0, chat_id=call.from_user.id, message_id=call.message.message_id,
                                    delete_reply_markup=True)
